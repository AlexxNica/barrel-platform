%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% == Erlang Compiler ==

{erl_opts, [
  warn_unused_vars,
  warnings_as_errors,
  ewarn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  strict_validation,
  warn_export_vars,
  warn_exported_vars,
%%  warn_missing_spec,
%%  warn_untyped_record,
  debug_info,
  {parse_transform, lager_transform},
  {lager_extra_sinks, [access]}

]}.

%% == Dependencies ==

{deps, [

  {lager, "3.2.4"}
]}.


%% == Overrides  ==
{overrides, [{override, barrel,
               [{deps, [{lager, "3.2.4"},
                       {uuid, "1.7.0", {pkg, uuid_erl}},
                       {hooks, "2.0.1"},
                       {jsx, "2.8.1"},
                       {jsone, "1.4.3"},
                        %% rocksdb backend
                        {rocksdb, {git, "https://gitlab.com/barrel-db/erlang-rocksdb.git", "master"}}
                       ]}]},
             {override, barrel_http,
              [{deps,
                [
                {cowboy, {git, "https://github.com/ninenines/cowboy.git",
                          {tag, "2.0.0-pre.7"}}},
                {hackney, "1.7.1"}
                ]
               }]
             },
             {override, barrel_replicate,
              [{deps, []}]},
             {override, barrel_peer,
              [{deps, []}]}
            ]
}.



%% == Release ==

{relx, [
  {release, {'barrel', "0.8.2"}, [
    barrel_common,
    barrel,
    barrel_replicate,
    barrel_http,
    barrel_httpc
  ]},
  {sys_config, "config/sys.config"},
  {dev_mode, true},
  {include_erts, false},
  {include_src, false},
  {extended_start_script, true}
]}.

%% == Profiles ==

{profiles,
 [{prod,
   [{relx,
     [{sys_config, "./config/sys.config"},
      {vm_args, "config/vm.args"},
      {dev_mode, false},
      {include_erts, true},
      {extended_start_script, true},
      {include_src, false},
      {extended_start_script, true}
     ]}
   ]}
 ]}.

%% == Common Test ==

{ct_compile_opts, [
  warn_unused_vars,
  warn_export_all,
  warn_shadow_vars,
  warn_unused_import,
  warn_unused_function,
  warn_bif_clash,
  warn_unused_record,
  warn_deprecated_function,
  warn_obsolete_guard,
  strict_validation,
  warn_export_vars,
  warn_exported_vars,
  %%warn_missing_spec,
  %%warn_untyped_record,
  debug_info,
  {parse_transform, lager_transform}
]}.

{ct_opts, [
%  {sys_config, ["config/test.config"]}
]}.


%% == Cover ==

{cover_enabled, true}.

{cover_opts, [verbose]}.

%% == Dialyzer ==
%%
{dialyzer, [
  {warnings, [
   race_conditions,
    no_return,
    unmatched_returns,
    error_handling%,
    %unknown
  ]},
  {plt_apps, top_level_deps},
  {plt_extra_apps, []},
  {plt_location, local},
  {plt_prefix, "barrel"},
  {base_plt_location, "."},
  {base_plt_prefix, "barrel"}
]}.
